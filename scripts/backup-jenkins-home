#!/bin/bash
#
# Script used to do a filtered backup of a jenkins's home directory, 
# into some user's home directory.

getopts "v" opt

case "$opt" in
    # -v is for verbose
    "v")    set -ex
            RSYNC=( rsync --verbose )

            TAR_VERBOSE="true"
            TAR=( tar --verbose )
            ;;
    *)      set -e
            RSYNC=( rsync --quiet )

            # stderr will still be populated with errors from tar
            # no --quiet flag exists for tar
            TAR_VERBOSE=
            TAR=( tar )
            ;;
esac

PROGRAM_NAME="$(basename "$0")"
USERNAME=""
USER_ID="$(id --user ${USERNAME})"
USER_GROUP_ID="$(id --group ${USERNAME})"
RSYNC_FILTER_PATH=""
JENKINS_HOME_PATH=""
JENKINS_HOME_BACKUP_DIR_NAME="jenkinshome-backup"
JENKINS_HOME_BACKUP_PATH="/home/${USERNAME}/${JENKINS_HOME_BACKUP_DIR_NAME}/"
JENKINS_HOME_BACKUP_TAR_GZ_NAME="${JENKINS_HOME_BACKUP_DIR_NAME}.tar.gz"

# check to see if I am root
ROOT_ID=0
if [ "$(id --user)" != "$ROOT_ID" ]; then
    echo "${PROGRAM_NAME}: must be root to run script!"
    exit 1
fi

if [ -z "$(which rsync)" ]; then
    echo "${PROGRAM_NAME}: rsync cannot be found on the PATH!"
    exit 1
fi

cd "$(dirname $JENKINS_HOME_BACKUP_PATH)" || exit 1

# generates the backup of content that we wish to backup from the jenkins home
"${RSYNC[@]}" --chown="${USERNAME}":"${USERNAME}" --archive --quiet --recursive --delete --exclude-from="${RSYNC_FILTER_PATH}" "$JENKINS_HOME_PATH" "$JENKINS_HOME_BACKUP_PATH"

# archives and compresses the backup of content of the jenkins home
# NOTE: using full path to backup directory causes tar
# to includes those additional (/home /home/$USERNAME) directories to be also archived
if [ -n "$TAR_VERBOSE" ]; then
    "${TAR[@]}" --gzip --create --file "$JENKINS_HOME_BACKUP_TAR_GZ_NAME" "$JENKINS_HOME_BACKUP_DIR_NAME"
else
    "${TAR[@]}" --gzip --create --file "$JENKINS_HOME_BACKUP_TAR_GZ_NAME" "$JENKINS_HOME_BACKUP_DIR_NAME" > /dev/null 2>&1
fi
chown "$USER_ID":"$USER_GROUP_ID" "$JENKINS_HOME_BACKUP_TAR_GZ_NAME"

exit 0
